---
# Kubernetes 설정 파일 복원

- name: "설정 파일 복원 시작"
  debug:
    msg: "Kubernetes 설정 파일을 복원합니다"

# 백업된 설정 파일 존재 확인
- name: "백업된 설정 파일 존재 확인"
  stat:
    path: "{{ k8s_backup_source_dir }}/{{ item | basename }}"
  register: config_files_stat
  loop: "{{ k8s_restore_files }}"
  when: item is defined

# /etc/kubernetes 디렉토리 복원 (압축 파일)
- name: "Kubernetes 설정 디렉토리 복원 확인"
  stat:
    path: "{{ k8s_backup_source_dir }}/kubernetes.tar.gz"
  register: k8s_config_archive

- name: "기존 Kubernetes 설정 디렉토리 백업"
  shell: |
    if [ -d "{{ k8s_config_dir }}" ]; then
      mv {{ k8s_config_dir }} {{ k8s_config_dir }}.rollback-backup.$(date +%s)
    fi
  when: k8s_config_archive.stat.exists | default(false)

- name: "Kubernetes 설정 디렉토리 복원"
  unarchive:
    src: "{{ k8s_backup_source_dir }}/kubernetes.tar.gz"
    dest: "{{ k8s_config_dir | dirname }}"
    remote_src: true
    owner: root
    group: root
  when: k8s_config_archive.stat.exists | default(false)

# 개별 설정 파일 복원
- name: "개별 설정 파일 복원"
  copy:
    src: "{{ k8s_backup_source_dir }}/{{ item.item | basename }}"
    dest: "{{ item.item }}"
    remote_src: true
    backup: true
  loop: "{{ config_files_stat.results }}"
  when: 
    - item.stat is defined
    - item.stat.exists
    - item.item is defined
  loop_control:
    label: "{{ item.item }}"

# kubelet 설정 파일 복원
- name: "kubelet 설정 파일 존재 확인"
  stat:
    path: "{{ k8s_backup_source_dir }}/kubelet"
  register: kubelet_config_stat

- name: "kubelet 설정 디렉토리 복원"
  unarchive:
    src: "{{ k8s_backup_source_dir }}/kubelet.tar.gz"
    dest: "{{ k8s_kubelet_config_dir | dirname }}"
    remote_src: true
    owner: root
    group: root
  when: kubelet_config_stat.stat.exists | default(false)

# systemd 서비스 파일 복원
- name: "systemd 서비스 파일 복원"
  copy:
    src: "{{ k8s_backup_source_dir }}/systemd/"
    dest: "/etc/systemd/system/"
    remote_src: true
  ignore_errors: true

# 설정 파일 권한 수정
- name: "Kubernetes 설정 파일 권한 설정"
  file:
    path: "{{ k8s_config_dir }}"
    owner: root
    group: root
    mode: '0755'
    recurse: true
  when: k8s_config_archive.stat.exists | default(false)

# PKI 인증서 권한 특별 처리
- name: "PKI 인증서 디렉토리 권한 설정"
  file:
    path: "{{ k8s_config_dir }}/pki"
    owner: root
    group: root
    mode: '0755'
    state: directory
  when: k8s_config_archive.stat.exists | default(false)
  ignore_errors: true

- name: "PKI 인증서 파일 권한 설정"
  shell: |
    find {{ k8s_config_dir }}/pki -name "*.crt" -exec chmod 644 {} \;
    find {{ k8s_config_dir }}/pki -name "*.key" -exec chmod 600 {} \;
    find {{ k8s_config_dir }}/pki -name "*.conf" -exec chmod 644 {} \;
  when: k8s_config_archive.stat.exists | default(false)
  ignore_errors: true

# kubelet 설정 권한
- name: "kubelet 설정 권한 설정"
  file:
    path: "{{ k8s_kubelet_config_dir }}"
    owner: root
    group: root
    mode: '0755'
    recurse: true
  ignore_errors: true

# systemd 데몬 리로드
- name: "systemd 데몬 리로드"
  systemd:
    daemon_reload: true

- name: "설정 파일 복원 완료"
  debug:
    msg: "Kubernetes 설정 파일 복원이 완료되었습니다" 