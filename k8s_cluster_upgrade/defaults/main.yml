---
# Kubernetes 버전 관리
k8s_current_version: ""  # 자동 감지됨
k8s_target_version: ""   # 지정하지 않으면 다음 마이너 버전으로 자동 설정
k8s_force_version: false  # true로 설정하면 k8s_target_version을 강제로 사용

# 업그레이드 설정
k8s_upgrade_strategy: "rolling"  # rolling, all-at-once
k8s_upgrade_timeout: 600  # 초 단위
k8s_upgrade_drain_timeout: 300  # 노드 드레인 타임아웃 (초)
k8s_upgrade_skip_drain: false  # 드레인 건너뛰기
k8s_upgrade_skip_cordon: false  # 코든 건너뛰기

# 백업 설정
k8s_backup_enabled: true
k8s_backup_dir: "/opt/k8s-backup"
k8s_backup_retention_days: 7

# 바이너리 설치 경로
k8s_bin_dir: "/usr/local/bin"
k8s_config_dir: "/etc/kubernetes"
k8s_systemd_dir: "/etc/systemd/system"

# kubeadm 설정
k8s_kubeadm_config_file: "{{ k8s_config_dir }}/kubeadm-config.yaml"
k8s_enable_kubeadm: true

# 패키지 관리자 설정 (패키지 설치된 경우)
k8s_package_manager: "auto"  # auto, yum, apt, binary
k8s_package_hold: true  # 패키지 버전 고정

# 검증 설정
k8s_verify_upgrade: true
k8s_health_check_retries: 30
k8s_health_check_delay: 10

# 로그 설정
k8s_log_level: "info"
k8s_log_file: "/var/log/k8s-upgrade.log"

# 클러스터 역할 설정
k8s_node_role: "auto"  # auto, master, worker

# 재시작 설정
k8s_restart_services: true
k8s_services_to_restart:
  - kubelet
  - crio

# 네트워크 설정
k8s_cni_plugin: "auto"  # auto, flannel, calico, weave

# 추가 구성 요소
k8s_upgrade_etcd: true
k8s_upgrade_coredns: true
k8s_upgrade_kube_proxy: true

# 보안 설정
k8s_certificate_renewal: true
k8s_skip_certificate_verification: false

# etcd health 체크 설정
k8s_etcd_health_strict: false  # true로 설정하면 etcd health 실패 시 업그레이드 중단
k8s_etcd_health_timeout: 30    # etcd health 체크 타임아웃 (초) 