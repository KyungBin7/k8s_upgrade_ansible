---
# 특정 패치 버전으로 패키지 설치 시도

- name: "패키지 설치 시도: {{ patch_version }}"
  debug:
    msg: "📦 {{ patch_version }} 버전으로 패키지 설치를 시도합니다."

# 현재 버전으로 패키지 리스트 생성
- name: "현재 버전용 패키지 리스트 생성"
  set_fact:
    k8s_current_packages: "{{ k8s_package_base_names | map('regex_replace', '^(.*)$', '\\1=' + patch_version + '-*') | list }}"

- name: "설치할 패키지 리스트 표시"
  debug:
    msg: "설치할 패키지: {{ k8s_current_packages | join(', ') }}"

# YUM 패키지 설치 시도
- name: "패키지 설치 시도 (yum): {{ patch_version }}"
  yum:
    name: "{{ k8s_current_packages }}"
    state: present
    disable_excludes: kubernetes
    update_cache: yes
  register: yum_install_result
  when: k8s_detected_package_manager == "yum"
  ignore_errors: true

# APT 패키지 설치 시도
- name: "패키지 업데이트 (apt)"
  apt:
    update_cache: yes
  when: k8s_detected_package_manager == "apt"
  ignore_errors: true

- name: "패키지 설치 시도 (apt): {{ patch_version }}"
  apt:
    name: "{{ k8s_current_packages }}"
    state: present
    force: yes
  register: apt_install_result
  when: k8s_detected_package_manager == "apt"
  ignore_errors: true

# 설치 결과 확인
- name: "설치 결과 확인"
  set_fact:
    k8s_install_success: "{{ (yum_install_result is defined and yum_install_result is succeeded) or (apt_install_result is defined and apt_install_result is succeeded) }}"

- name: "설치 성공 시 성공 정보 저장"
  set_fact:
    k8s_package_install_success: true
    k8s_successful_version: "{{ patch_version }}"
    k8s_successful_packages: "{{ k8s_current_packages }}"
  when: k8s_install_success

- name: "설치 성공 알림"
  debug:
    msg: 
      - "✅ 패키지 설치 성공!"
      - "  성공한 버전: {{ patch_version }}"
      - "  설치된 패키지: {{ k8s_current_packages | join(', ') }}"
  when: k8s_install_success

- name: "설치 실패 알림"
  debug:
    msg: 
      - "❌ 패키지 설치 실패: {{ patch_version }}"
      - "  시도한 패키지: {{ k8s_current_packages | join(', ') }}"
      - "  오류 (yum): {{ yum_install_result.msg | default('N/A') }}"
      - "  오류 (apt): {{ apt_install_result.msg | default('N/A') }}"
  when: not k8s_install_success 